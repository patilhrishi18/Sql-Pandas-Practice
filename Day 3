
SELECT * FROM employee;

--1 Q) write a query to print emp name , their manager name and diffrence in their age (in days) for employees whose year of birth is before their managers year of birth--
SELECT e.emp_name as employee_name, m.emp_name as manager_name, CAST(e.emp_age-m.emp_age AS DATE) as age_diff
FROM employee e
INNER JOIN employee m
ON e.manager_id = m.emp_id
WHERE e.emp_age>m.emp_age;

--2 Q) write a query to find subcategories who never had any return orders in the month of november (irrespective of years)--

SELECT * FROM orders;
SELECT * FROM returns;

SELECT o.sub_category
FROM orders o
LEFT JOIN returns r
ON o.order_id = r.order_id
WHERE DATEPART(MONTH, o.order_date) = 11
GROUP BY o.sub_category
HAVING COUNT(r.order_id) = 0;


--3 Q) write a query to find order ids where there is only 1 product bought by the customer.--
SELECT * FROM orders;
SELECT * FROM returns;

SELECT order_id
FROM orders
GROUP BY order_id
HAVING count(*) = 1;


--4 Q) write a query to print manager names along with the comma separated list(order by emp salary) of all employees directly reporting to him--


Select * from employee;

SELECT m.emp_name as manager_name, STRING_AGG(e.emp_name, ',') WITHIN GROUP (ORDER BY e.salary DESC) as emp_by_salary  
FROM employee e
INNER JOIN employee m
ON e.manager_id = m.emp_id
GROUP BY m.emp_name;


--5 Q) write a query to get number of business days between order_date and ship_date (exclude weekends). Assume that all order date and ship date are on weekdays only--

SELECT  * from orders
WHERE DATEDIFF(day,order_date,ship_date) > 7;

SELECT DATEDIFF(WEEKDAY, order_date, ship_date )
FROM orders;

--6 Q) write a query to print 3 columns : category, total_sales and (total sales of returned orders)--

select o.category,sum(o.sales) as total_sales
,sum(case when r.order_id is not null then sales end) as return_orders_sales
from orders o
left join returns r on o.order_id=r.order_id
group by category;

--7 Q) write a query to print below 3 columns category, total_sales_2019(sales in year 2019), total_sales_2020(sales in year 2020)--

SELECT category,
SUM(CASE WHEN DATEPART(YEAR,ship_date) = 2019 THEN sales END) AS total_sales_2019,
SUM(CASE WHEN DATEPART(YEAR,ship_date) = 2020 THEN sales END) AS total_sales_2020
FROM orders 
GROUP BY category; 

--8 Q) write a query print top 5 cities in west region by average no of days between order date and ship date --

SELECT TOP 5 city,
AVG(DATEDIFF(DAY,order_date,ship_date)) as avg_no_days_to_ship
FROM orders 
WHERE region = 'West'
GROUP BY city
ORDER BY avg_no_days_to_ship DESC;

--9 Q) write a query to print emp name, manager name and senior manager name (senior manager is manager's manager) --

SELECT * from employee;

SELECT e.emp_name, m.emp_name, s.emp_name
FROM employee e
INNER JOIN employee m
ON e.manager_id = m.emp_id
INNER JOIN employee s
ON m.manager_id = s.emp_id;
