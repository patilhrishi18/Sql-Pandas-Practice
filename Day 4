
--1 Q) write a query to produce below output from icc_world_cup table. team_name, no_of_matches_played , no_of_wins , no_of_losses--

create table icc_world_cup
(
Team_1 Varchar(20),
Team_2 Varchar(20),
Winner Varchar(20)
);
INSERT INTO icc_world_cup values('India','SL','India');
INSERT INTO icc_world_cup values('SL','Aus','Aus');
INSERT INTO icc_world_cup values('SA','Eng','Eng');
INSERT INTO icc_world_cup values('Eng','NZ','NZ');
INSERT INTO icc_world_cup values('Aus','India','India');


SELECT * FROM icc_world_cup;

SELECT * from icc_world_cup;

SELECT t.team_name, count(*) as total_matches_played, sum(win_flag) as total_wins,  count(*)-sum(win_flag) as total_losses
FROM 
(SELECT Team_1 as team_name , CASE WHEN Team_1 = Winner THEN 1 ELSE 0 END AS win_flag
FROM icc_world_cup
UNION ALL 
SELECT Team_2 as  team_name , CASE WHEN Team_2 = Winner THEN 1 ELSE 0 END AS win_flag from icc_world_cup) as t
GROUP BY team_name;


--2 Q) write a query to print first name and last name of a customer using orders table(everything after first space can be considered as last name) customer_name, first_name,last_name--

SELECT * FROM 
orders;

SELECT customer_name, TRIM(SUBSTRING(customer_name,1,CHARINDEX(' ',customer_name))) as first_name, SUBSTRING(customer_name,CHARINDEX(' ', customer_name)+1, LEN(customer_name)-CHARINDEX(' ',customer_name)) as last_name FROM orders;

--3 Q) write a query to print below output using drivers table. Profit rides are the no of rides where end location of a ride is same as start location of immediate next ride for a driver id, total_rides , profit_rides dri_1,5,1 dri_2,2,0 --

create table drivers(id varchar(10), start_time time, end_time time, start_loc varchar(10), end_loc varchar(10));
insert into drivers values('dri_1', '09:00', '09:30', 'a','b'),('dri_1', '09:30', '10:30', 'b','c'),('dri_1','11:00','11:30', 'd','e');
insert into drivers values('dri_1', '12:00', '12:30', 'f','g'),('dri_1', '13:30', '14:30', 'c','h');
insert into drivers values('dri_2', '12:15', '12:30', 'f','g'),('dri_2', '13:30', '14:30', 'c','h');

SELECT * FROM drivers;


SELECT id, COUNT(*) as total_rides,
CASE WHEN COUNT(SELECT end_loc from drivers INTERSECT SELECT start_loc from drivers) != 0 THEN 
FROM 
drivers
GROUP BY id;


SELECT * FROM employee;

SELECT e.*, e2.* FROM 
employee e
INNER JOIN
(SELECT dept_id, avg(salary) as avg_salary
FROM employee
GROUP BY dept_id) as e2
ON e.dept_id = e2.dept_id;

